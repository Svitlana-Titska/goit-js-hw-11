{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'your_api_key';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const getImagesByQuery = async query => {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n    return response.data.hits;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error;\n  }\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nexport function createGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags }) =>\n        `<li>\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" />\n          </a>\n        </li>`\n    )\n    .join('');\n  gallery.innerHTML = markup;\n\n  const lightbox = new SimpleLightbox('.gallery a');\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n  document.querySelector('.loader').classList.add('visible');\n}\n\nexport function hideLoader() {\n  document.querySelector('.loader').classList.remove('visible');\n}\n","import { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst input = document.querySelector('input[name=\"search-text\"]');\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const query = input.value.trim();\n  if (!query) return;\n\n  clearGallery();\n  showLoader();\n\n  try {\n    const images = await getImagesByQuery(query);\n\n    if (images.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Sorry, no images found. Please try again!',\n      });\n    } else {\n      createGallery(images);\n    }\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n    });\n  } finally {\n    hideLoader();\n  }\n});\n\nimport './css/styles.css';\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","axios","error","createGallery","images","gallery","markup","webformatURL","largeImageURL","tags","SimpleLightbox","clearGallery","showLoader","hideLoader","form","input","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,eACVC,EAAW,2BAEJC,EAAmB,MAAMC,GAAS,CAC7C,GAAI,CAUF,OATiB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GACe,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACP,CACH,EClBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAASF,EACZ,IACC,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,CAAM,IACpC;AAAA,qBACaD,CAAa;AAAA,wBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA,cAG7C,EACA,KAAK,EAAE,EACVJ,EAAQ,UAAYC,EAEH,IAAII,EAAe,YAAY,EACvC,QAAO,CAClB,CAEO,SAASC,GAAe,CAC7B,MAAMN,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,CAEO,SAASO,GAAa,CAC3B,SAAS,cAAc,SAAS,EAAE,UAAU,IAAI,SAAS,CAC3D,CAEO,SAASC,GAAa,CAC3B,SAAS,cAAc,SAAS,EAAE,UAAU,OAAO,SAAS,CAC9D,CCtBA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,2BAA2B,EAEhED,EAAK,iBAAiB,SAAU,MAAME,GAAS,CAC7CA,EAAM,eAAc,EAEpB,MAAMhB,EAAQe,EAAM,MAAM,KAAI,EAC9B,GAAKf,EAEL,CAAAW,IACAC,IAEA,GAAI,CACF,MAAMR,EAAS,MAAML,EAAiBC,CAAK,EAEvCI,EAAO,SAAW,EACpBa,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2CACjB,CAAO,EAEDd,EAAcC,CAAM,CAEvB,MAAe,CACda,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACf,CAAK,CACL,QAAY,CACRJ,GACD,EACH,CAAC"}